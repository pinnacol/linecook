= VM Setup

Linecook provides support to develop scripts on a virtual machine managed by
VirtualBox. Nothing says you have to use VirtualBox during development, or
that you have to use it in the way described below, but if you want to, these
are instructions for setting up a generic Ubuntu VM.

1. Download and Install VirtualBox (http://www.virtualbox.org)
2. Download a Ubuntu ISO (http://www.ubuntu.com/server/get-ubuntu/download)
3. Build the Box

<em>Note these instructions are for building a dev box only. In particular
they allow the linecook user to su without a password, which may not be in you
best production interests.</em>

== Ubuntu

Use the VirtualBox wizard to get started. The name can be changed along with
any of the other settings (ex user, ssh port), but be sure to propagate
changes throughout the setup process.

  - name: abox
  - Linux/Ubuntu
  - 512 MB memory
  - 8 GB dynamically resizing drive

Add the ubuntu iso to the cd/dvd device under Settings > Storage. Now start
the server and install ubuntu (use default settings unless specified):

  - hostname: abox-ubuntu
  - user/password: linecook
  - select 'OpenSSH server' in packages to install

When the server has rebooted and is ready at the login screen, remove the
install iso, take a snapshot and setup port forwarding.

  (Devices > CD/DVD Devices > Remove disk from virtual drive)
  VBoxManage snapshot abox take RAW
  VBoxManage controlvm abox poweroff
  # wait to fully power off
  VBoxManage modifyvm abox --natpf1 'abox-ssh,tcp,,2220,,22'
  VBoxManage modifyvm abox --natpf1 'abox-http,tcp,,8880,,80'
  VBoxManage -q snapshot abox restore RAW
  VBoxManage startvm abox

Transfer your ssh key to the vm. Help to generate ssh keys can be found on
{GitHub}[http://help.github.com/key-setup-redirect]:

  scp -P 2220 -o UserKnownHostsFile=/dev/null ~/.ssh/id_rsa.pub linecook@localhost:id_rsa.pub
  
Login as linecook and setup su permissions for the linecook user:

  vm: sudo vi /etc/pam.d/su
  
  # uncomment:
  #
  #   # Uncomment this if you want wheel members to be able to
  #   # su without a password.
  #   auth       sufficient pam_wheel.so trust
  #
  
  vm: sudo groupadd wheel
  vm: sudo usermod -a -G wheel linecook

Setup SSH:

  vm: mkdir .ssh
  vm: mv id_rsa.pub .ssh/authorized_keys
  vm: chmod 0700 .ssh
  vm: chmod 0600 .ssh/authorized_keys

Remove the login banner and exit:

  vm: sudo rm /etc/motd
  vm: exit

Now take some standard snapshots:

  VBoxManage snapshot abox take BASE
  VBoxManage snapshot abox take CURRENT
  VBoxManage controlvm abox poweroff

Setup a ssh config file:

  [config/ssh]
  Host abox
  HostName localhost
  User linecook
  Port 2220
  UserKnownHostsFile /dev/null
  StrictHostKeyChecking no
  IdentitiesOnly yes
  ControlMaster auto
  ControlPath /tmp/socket-%r@%h:%p

Now you can control the box via these linecook commands. Note the share
command only works if you have sshfs set up (see the {Shared
Folders}[link:files/doc/doc/Shared%20Folders.html] docs):

  # start the vm to a known snapshot
  linecook start --snapshot current
  
  # build, transfer, run, and test packages
  linecook run
  
  # setup an sshfs share (optional)
  linecook share
  
  # checkout the results
  linecook ssh
  
  # move the current snapshot forward, and repeat
  linecook snapshot current
  
  # return to go
  linecook snapshot --reset current
  linecook start --snapshot current
  
  # stop the vm and go home
  linecook stop

To cleanup the port forwarding (run later, if ever):

  VBoxManage modifyvm abox --natpf1 delete 'abox-ssh'
  VBoxManage modifyvm abox --natpf1 delete 'abox-http'

=== Multiple VMs

To develop multiple (potentially interacting) virtual machines, build each as
above but customize your access to each machine on the host. For example if
you made an 'bbox' virtual machine:

  - name: bbox
  - hostname: bbox-ubuntu
  
  VBoxManage modifyvm bbox --natpf1 'bbox-ssh,tcp,,2221,,22'
  VBoxManage modifyvm bbox --natpf1 'bbox-http,tcp,,8881,,80'

Notice both the name and the ports are altered in the port forwarding
commands. Add an entry for the host in the ssh config file (you can DRY up the
config file using the * host):

  [config/ssh]
  Host abox
  Port 2220
  
  Host bbox
  Port 2221
  
  Host *
  HostName localhost
  User linecook
  UserKnownHostsFile /dev/null
  StrictHostKeyChecking no
  IdentitiesOnly yes
  ControlMaster auto
  ControlPath /tmp/socket-%r@%h:%p

The same linecook commands will now operate on a set of vms:

  # start all (or a subset) the vms to a known snapshot
  linecook start --snapshot current
  
  # * build, transfer, run the 'abox.yml' package on the abox vm
  # * build, transfer, run the 'bbox.yml' package on the bbox vm
  # * run the tests for each
  linecook test
  
  # move the current snapshot forward for all (or a subset) the vms
  linecook snapshot current
  
  # checkout the results, one at a time
  linecook ssh abox
  linecook ssh bbox
  
  # etc...

Note the name of a package corresponds to the host that it will be run on, ie
'abox.yml' goes to the 'abox' host as specified in 'config/ssh'. Implicitly
the virtual machine will also be named 'abox' in VirtualBox. If you name it
something else, declare the vm name using a linecook-specific comment next to
the Host declaration like this:

  [config/ssh]
  ...
  Host abox    # [the_vm_name]
  ...

That's it.
