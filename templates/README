= README

Linecook provides support to develop scripts on a virtual machine managed by
VirtualBox. Nothing says you have to use VirtualBox during development, or
that you have to use it in the way described below, but if you want to, these
are instructions for setting up a generic Ubuntu VM.

1. Download and Install VirtualBox (http://www.virtualbox.org)
2. Download a Ubuntu ISO (http://www.ubuntu.com/server/get-ubuntu/download)
3. Build the Box

== Setup

Use the VirtualBox wizard to get started. The name can be changed along with
any of the other settings (ex user), but be sure to propagate changes
throughout the setup process.

  - name: abox
  - Linux/Ubuntu
  - 512 MB memory
  - 8 GB dynamically resizing drive

Under Settings:

  - add the ubuntu iso to the cd/dvd device (under storage)

Start the server and install ubuntu (use default settings unless specified):

  - hostname: abox-ubuntu
  - user/password: linecook
  (Devices > CD/DVD Devices > Remove disk from virtual drive)
  (Machine > Take Snapshot) - RAW

Login and setup sudo permissions for the linecook user:

  vm: sudo visudo

  # insert:
  #
  #   # Members of the linecook group may sudo without a password
  #   %linecook ALL=NOPASSWD: ALL
  #
  # then exit (write out changes as prompted)

Setup guest additions to allow shared folders. On OSX guest additions are
located in the application package (view package contents on VirtualBox
application > Contents > MacOS > VBoxGuestAdditions.iso).

  (Devices > CD/DVD Devices): select the VBoxGuestAdditions.iso
  vm: sudo apt-get install -y linux-headers-$(uname -r) build-essential ssh openssh-server
  vm: sudo mkdir /media/dvd
  vm: sudo mount /dev/dvd /media/dvd/             # run again if it fails 
  vm: sudo sh /media/dvd/VBoxLinuxAdditions.run
  # there may be a warning about 'Window System drivers fail', ignore
  vm: sudo umount /media/dvd/
  (Devices > CD/DVD Devices > Remove disk from virtual drive)
  
Mount a share to the vm directory:

  ht: VBoxManage sharedfolder add abox --name vm --hostpath "$(pwd)/vm" --transient
  vm: mkdir ~/vm
  vm: sudo mount -t vboxsf -o uid=1000,gid=100 vm ~/vm

Setup SSH:

  vm: mkdir ~/.ssh
  vm: chmod 0700 ~/.ssh
  vm: cat ~/vm/ssh/id_rsa.pub >> ~/.ssh/authorized_keys
  vm: chmod 0600 ~/.ssh/authorized_keys
  ht: chmod 0600 vm/ssh/id_rsa

Unmount the share:

  vm: sudo umount ~/vm
  ht: VBoxManage sharedfolder remove abox --name vm --transient

Remove the login banner (if you prefer):

  vm: sudo rm /etc/motd

Now take some standard snapshots and setup port forwarding:

  vm: exit
  ht: VBoxManage snapshot abox take BASE
  ht: VBoxManage snapshot abox take CURRENT
  ht: VBoxManage controlvm abox poweroff
  ht: VBoxManage modifyvm abox --natpf1 'abox-ssh,tcp,,2220,,22'
  ht: VBoxManage modifyvm abox --natpf1 'abox-http,tcp,,8880,,80'
  ht: VBoxManage -q snapshot abox restore CURRENT
  ht: VBoxManage startvm abox --type headless

Now you can re-establish the share and access the box through these linecook
commands:

  ht: linecook share
  ht: linecook ssh

To cleanup the port forwarding (run later, if ever):

  ht: VBoxManage modifyvm abox --natpf1 delete 'abox-ssh'
  ht: VBoxManage modifyvm abox --natpf1 delete 'abox-http'

== Development

Linecook provides the following commands to manage and develop packages:

  # start the vm to a known snapshot
  ht: linecook start --snapshot=current
  
  # build, transfer, run, and test the 'abox.yml' package
  ht: linecook test
  
  # checkout the results (and or look in the vm directory)
  ht: linecook ssh
  
  # move the current snapshot forward, and repeat
  ht: linecook snapshot current
  
  # return to go
  ht: linecook start --snapshot=base
  
  # stop the vm and go home
  ht: linecook stop

=== Multiple VMs

To develop multiple (potentially interacting) virtual machines, build each as
above but customize your access to each machine on the host. For example if
you made an 'bbox' virtual machine:

  - name: bbox
  - hostname: bbox-ubuntu
  
  ht: VBoxManage modifyvm bbox --natpf1 'bbox-ssh,tcp,,2221,,22'
  ht: VBoxManage modifyvm bbox --natpf1 'bbox-http,tcp,,8881,,80'

Notice both the name and the ports are altered in the port forwarding
commands. Now in the ssh config file, make entries for each host; the
configurations can be reorganized to be a little more DRY:

  [config/ssh]
  HostName localhost
  User linecook
  UserKnownHostsFile /dev/null
  StrictHostKeyChecking no
  IdentitiesOnly yes
  IdentityFile vm/ssh/id_rsa
  
  Host abox
    Port 2220
  
  Host bbox
    Port 2221

The same linecook commands will operate on a set of vms:

  # start all (or a subset) the vms to a known snapshot
  ht: linecook start --snapshot=current
  
  # * build, transfer, run the 'abox.yml' package on the abox vm
  # * build, transfer, run the 'bbox.yml' package on the bbox vm
  # * run the tests for each
  ht: linecook test
  
  # move the current snapshot forward for all (or a subset) the vms
  ht: linecook snapshot current
  
  # checkout the results, one at a time - note the vm directory will be
  # shared among all of the vms (typically does not cause conflicts)
  ht: linecook ssh abox
  ht: linecook ssh bbox
  
  # etc...

When running tests the package name corresponds to the host that it will be
run on, ie 'abox.yml' goes to the 'abox' host as specified in 'config/ssh'.
Implicitly the target virtual machine will also be named 'abox' in VirtualBox.
If you name it something else, add a magic comment to the Host declaration
like this:

  [config/ssh]
  ...
  Host abox    # [the_vm_name]
  ...

That's it.
