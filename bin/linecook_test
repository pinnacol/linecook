#! /bin/sh
############################################################################

ssh_config_file=${SSH_CONFIG_FILE:-config/ssh}
remote_test_dir=${REMOTE_TEST_DIR:-vm/test}
build_script=${BUILD_SCRIPT:-build}
test_script=${TEST_SCRIPT:-test}

usage="usage: %s [-h] PROJECT_DIR\n"
option="       %s   %s\n"
while getopts "h" opt
do
  case $opt in
  h)  printf "$usage" $0
      printf "$option" "-h" "prints this help"
      exit 0;;
  ?)  printf "$usage" $0
      exit 2;;
  esac
done
shift $(($OPTIND - 1))

assert_status_equal () {
  expected=$1; actual=$2; lineno=$3
  
  if [ $actual -ne $expected ]
  then 
    echo "[$0:$lineno] exit status $actual (expected $expected)"
    exit 1
  fi
}

################################### test ###################################
project_dir=$1
shift

if [ ! -d "$project_dir" ]
then
  echo "not a project directory: $project_dir"
  exit 1
else
  # expand project_dir
  cd -- "$project_dir" > /dev/null
  project_dir=$(pwd)
  cd - > /dev/null
fi

#
# build packages
#

for package_dir in "$@"
do
host=$(basename -- "$package_dir")

ssh -q -T -F "$ssh_config_file" "$host" -- <<SETUP
rm -rf "$remote_test_dir/$host"
if [ "$remote_test_dir" != "" ]
then
  mkdir -p "$remote_test_dir"
fi
SETUP

scp -q -r -F "$ssh_config_file" "$package_dir" "$host:$remote_test_dir"
assert_status_equal 0 $? $LINENO

ssh -q -T -F "$ssh_config_file" "$host" -- <<RUN
cd "$remote_test_dir/$host"
if [ -f "$build_script" ]
then
  chmod +x "$build_script"
  sudo ./"$build_script"
fi
RUN

assert_status_equal 0 $? $LINENO
done

#
# test packages
#

for package_dir in "$@"
do
host=$(basename -- "$package_dir")

ssh -q -T -F "$ssh_config_file" "$host" -- <<CHECK
cd "$remote_test_dir/$host"
if [ -f "$test_script" ]
then
  chmod +x "$test_script"
  ./"$test_script"
fi
CHECK

assert_status_equal 0 $? $LINENO
done
################################## (test) ##################################
